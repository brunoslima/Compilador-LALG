/* Generated By:JavaCC: Do not edit this line. GrammarConstants.java */
package sintatico;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface GrammarConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PROGRAM = 1;
  /** RegularExpression Id. */
  int BEGIN = 2;
  /** RegularExpression Id. */
  int END = 3;
  /** RegularExpression Id. */
  int PROCEDURE = 4;
  /** RegularExpression Id. */
  int VAR = 5;
  /** RegularExpression Id. */
  int INT = 6;
  /** RegularExpression Id. */
  int REAL = 7;
  /** RegularExpression Id. */
  int BOOLEAN = 8;
  /** RegularExpression Id. */
  int TRUE = 9;
  /** RegularExpression Id. */
  int FALSE = 10;
  /** RegularExpression Id. */
  int READ = 11;
  /** RegularExpression Id. */
  int WRITE = 12;
  /** RegularExpression Id. */
  int DOIS_PONTOS = 13;
  /** RegularExpression Id. */
  int PONTO_VIRGULA = 14;
  /** RegularExpression Id. */
  int VIRGULA = 15;
  /** RegularExpression Id. */
  int PONTO = 16;
  /** RegularExpression Id. */
  int IF = 17;
  /** RegularExpression Id. */
  int THEN = 18;
  /** RegularExpression Id. */
  int ELSE = 19;
  /** RegularExpression Id. */
  int WHILE = 20;
  /** RegularExpression Id. */
  int DO = 21;
  /** RegularExpression Id. */
  int SIMBOLO_IGUAL = 22;
  /** RegularExpression Id. */
  int SIMBOLO_DIFERENTE = 23;
  /** RegularExpression Id. */
  int SIMBOLO_MENOR = 24;
  /** RegularExpression Id. */
  int SIMBOLO_MENOR_IGUAL = 25;
  /** RegularExpression Id. */
  int SIMBOLO_MAIOR = 26;
  /** RegularExpression Id. */
  int SIMBOLO_MAIOR_IGUAL = 27;
  /** RegularExpression Id. */
  int OP_ATRIBUICAO = 28;
  /** RegularExpression Id. */
  int OP_ADICAO = 29;
  /** RegularExpression Id. */
  int OP_SUBTRACAO = 30;
  /** RegularExpression Id. */
  int OP_DIVISAO = 31;
  /** RegularExpression Id. */
  int OP_MULTIPLICACAO = 32;
  /** RegularExpression Id. */
  int OP_AND = 33;
  /** RegularExpression Id. */
  int OP_OR = 34;
  /** RegularExpression Id. */
  int OP_NOT = 35;
  /** RegularExpression Id. */
  int PARENTESES_ABRE = 36;
  /** RegularExpression Id. */
  int PARENTESES_FECHA = 37;
  /** RegularExpression Id. */
  int NUMERO_INTEIRO = 38;
  /** RegularExpression Id. */
  int NUMERO_REAL = 39;
  /** RegularExpression Id. */
  int IDENTIFICADOR = 40;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"program\"",
    "\"begin\"",
    "\"end\"",
    "\"procedure\"",
    "\"var\"",
    "\"int\"",
    "\"real\"",
    "\"boolean\"",
    "\"true\"",
    "\"false\"",
    "\"read\"",
    "\"write\"",
    "\":\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"if\"",
    "\"then\"",
    "\"else\"",
    "\"while\"",
    "\"do\"",
    "\"=\"",
    "\"<>\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\":=\"",
    "\"+\"",
    "\"-\"",
    "\"div\"",
    "\"*\"",
    "\"and\"",
    "\"or\"",
    "\"not\"",
    "\"(\"",
    "\")\"",
    "<NUMERO_INTEIRO>",
    "<NUMERO_REAL>",
    "<IDENTIFICADOR>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "<token of kind 45>",
    "<token of kind 46>",
  };

}
