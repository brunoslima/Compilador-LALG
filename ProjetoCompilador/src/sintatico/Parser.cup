package sintatico;
import java_cup.runtime.Symbol;
import java.util.*;
import java.io.*;


parser code {:

    public void report_error(String message, Object info)  {
        System.out.println("Warning - " + message);
    }

    public void report_fatal_error(String message, Object info)  {
        
        Symbol s = (Symbol) info;
        System.out.println("Error - " + message + info);
        System.out.println("Erro de sintaxe - Linha: " + s.left + " Coluna: " + s.right + " Texto: " + s.value + "\n");
        //RecuperacaoErros.erros.add("Erro de sintaxe - Linha: " + s.left + " Coluna: " + s.right + " Texto: " + s.value + "\n");

        //System.exit(0);
    }

:};


terminal COMENTARIO_MULTI, COMENTARIO_LINHA;
terminal PROGRAM, BEGIN, END, PROCEDURE, VAR;
terminal INT, REAL, BOOLEAN, TRUE, FALSE;
terminal READ, WRITE;
terminal DOIS_PONTOS, VIRGULA, PONTO, PONTO_VIRGULA;
terminal IF, THEN, ELSE, WHILE, DO;
terminal SIMBOLO_IGUAL, SIMBOLO_DIFERENTE, SIMBOLO_MENOR, SIMBOLO_MENOR_IGUAL, SIMBOLO_MAIOR, SIMBOLO_MAIOR_IGUAL;
terminal OP_ATRIBUICAO, OP_ADICAO, OP_SUBTRACAO, OP_DIVISAO, OP_MULTIPLICACAO, OP_AND, OP_OR, OP_NOT;
terminal PARENTESES_ABRE, PARENTESES_FECHA;
terminal NUMERO_INTEIRO, NUMERO_REAL, IDENTIFICADOR;
terminal ERROR, ESPACO, TAB, NOVA_LINHA;

non terminal programa, bloco, parte_declaracao_variaveis, parte_declaracao_variaveis2;
non terminal lista_identificadores, lista_identificadores2, parte_declaracao_sub_rotinas, declaracao_procedimentos, declaracao_procedimentos1;
non terminal parametros_formais, secao_parametros_formais, secao_parametros_formais2; 
non terminal tipo, comando_composto, comando_composto2, comando, atribuicao, chamada_procedimento;
non terminal comando_condicional1, comando_condicional12, comando_condicional2; 
non terminal comando_repetitivo, comando_repetitivo2;
non terminal expressao, relacao, expressao_simples, expressao_simples2;
non terminal termo, termo2, fator;
non terminal variavel, lista_expressoes, lista_expressoes2;


start with programa;

programa ::= PROGRAM IDENTIFICADOR PONTO_VIRGULA bloco PONTO;

bloco ::= parte_declaracao_variaveis;


parte_declaracao_variaveis ::= tipo lista_identificadores parte_declaracao_variaveis2 | parte_declaracao_sub_rotinas;

parte_declaracao_variaveis2 ::= PONTO_VIRGULA tipo lista_identificadores parte_declaracao_variaveis2 | PONTO_VIRGULA parte_declaracao_variaveis2 | parte_declaracao_sub_rotinas;



lista_identificadores ::= variavel lista_identificadores2;

lista_identificadores2 ::= VIRGULA variavel lista_identificadores2 |;


parte_declaracao_sub_rotinas ::= PROCEDURE IDENTIFICADOR declaracao_procedimentos | comando_composto;

declaracao_procedimentos ::= PARENTESES_ABRE parametros_formais PARENTESES_FECHA PONTO_VIRGULA declaracao_procedimentos1 | PONTO_VIRGULA declaracao_procedimentos1;

declaracao_procedimentos1 ::= bloco PONTO_VIRGULA parte_declaracao_sub_rotinas;

parametros_formais ::= secao_parametros_formais secao_parametros_formais2 |;

secao_parametros_formais2 ::= PONTO_VIRGULA secao_parametros_formais secao_parametros_formais2 |;

secao_parametros_formais ::= VAR lista_identificadores DOIS_PONTOS tipo | lista_identificadores DOIS_PONTOS tipo;

tipo ::= INT | BOOLEAN | REAL;





comando_composto ::= BEGIN comando comando_composto2 END | BEGIN END;

comando_composto2 ::= PONTO_VIRGULA comando comando_composto2 |;

comando ::= atribuicao | chamada_procedimento | BEGIN comando PONTO_VIRGULA comando END | comando_condicional1 | comando_repetitivo;

atribuicao ::= variavel OP_ATRIBUICAO expressao;

chamada_procedimento ::= IDENTIFICADOR PARENTESES_ABRE lista_expressoes PARENTESES_FECHA;

comando_condicional1 ::= IF expressao THEN comando_condicional12 comando_condicional2;

comando_condicional12 ::= atribuicao | chamada_procedimento | BEGIN comando PONTO_VIRGULA comando END | comando_condicional1 | comando_repetitivo;

comando_condicional2 ::= ELSE atribuicao | chamada_procedimento | BEGIN comando PONTO_VIRGULA comando END | comando_condicional1 | comando_repetitivo;

comando_repetitivo ::= WHILE expressao DO comando_repetitivo2;

comando_repetitivo2 ::= atribuicao | chamada_procedimento | BEGIN comando PONTO_VIRGULA comando END | comando_condicional1 | comando_repetitivo;





expressao ::= expressao_simples;

expressao_simples ::= OP_ADICAO termo expressao_simples2 relacao | OP_SUBTRACAO termo expressao_simples2 relacao | termo expressao_simples2 relacao;

expressao_simples2 ::= OP_ADICAO termo expressao_simples2 | OP_SUBTRACAO termo expressao_simples2 | OP_OR termo expressao_simples2 |;

relacao ::= SIMBOLO_IGUAL expressao_simples | SIMBOLO_DIFERENTE expressao_simples | SIMBOLO_MENOR expressao_simples | SIMBOLO_MENOR_IGUAL expressao_simples | SIMBOLO_MAIOR_IGUAL expressao_simples | SIMBOLO_MAIOR expressao_simples |;



termo ::= fator termo2;

termo2 ::= OP_MULTIPLICACAO fator termo2 | OP_DIVISAO fator termo2| OP_AND fator termo2 |;



fator ::= variavel | NUMERO_INTEIRO | NUMERO_REAL | 
          PARENTESES_ABRE expressao PARENTESES_FECHA | 
          OP_NOT fator;


lista_expressoes ::= expressao lista_expressoes2;

lista_expressoes2 ::= VIRGULA expressao |;

///////até aqui tudo certo sem nenhum warning ou conflito, o problema é para baixo.

variavel ::= IDENTIFICADOR;

/*
variavel ::= IDENTIFICADOR variavel2;

variavel2 ::= expressao |;
*/


